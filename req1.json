IncomingMessage {
   _readableState: ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: [],
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     errorEmitted: false,
     emitClose: true,
     autoDestroy: false,
     destroyed: false,
     errored: null,
     closed: false,
     closeEmitted: false,
     defaultEncoding: 'utf8',
     awaitDrainWriters: null,
     multiAwaitDrain: false,
     readingMore: true,
     decoder: null,
     encoding: null,
     [Symbol(kPaused)]: false
   },
   _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },
   _eventsCount: 1,
   _maxListeners: undefined,
   socket: <ref *1> Socket {
     connecting: false,
     _hadError: false,
     _parent: null,
     _host: null,
     _readableState: ReadableState {
       objectMode: false,
       highWaterMark: 16384,
       buffer: BufferList { head: null, tail: null, length: 0 },
       length: 0,
       pipes: [],
       flowing: true,
       ended: false,
       endEmitted: false,
       reading: true,
       sync: false,
       needReadable: true,
       emittedReadable: false,
       readableListening: false,
       resumeScheduled: false,
       errorEmitted: true,
       emitClose: false,
       autoDestroy: false,
       destroyed: true,
       errored: [Error],
       closed: true,
       closeEmitted: true,
       defaultEncoding: 'utf8',
       awaitDrainWriters: null,
       multiAwaitDrain: false,
       readingMore: false,
       decoder: null,
       encoding: null,
       [Symbol(kPaused)]: false
     },
     _events: [Object: null prototype] {
       end: [Array],
       timeout: [Function: socketOnTimeout],
       data: [Function: bound socketOnData],
       error: [Function: noop],
       close: [Array],
       drain: [Function: bound socketOnDrain],
       resume: [Function: onSocketResume],
       pause: [Function: onSocketPause]
     },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState: WritableState {
       objectMode: false,
       highWaterMark: 16384,
       finalCalled: false,
       needDrain: false,
       ending: false,
       ended: false,
       finished: false,
       destroyed: true,
       decodeStrings: false,
       defaultEncoding: 'utf8',
       length: 0,
       writing: false,
       corked: 0,
       sync: false,
       bufferProcessing: false,
       onwrite: [Function: bound onwrite],
       writecb: null,
       writelen: 0,
       afterWriteTickInfo: null,
       buffered: [],
       bufferedIndex: 0,
       allBuffers: true,
       allNoop: true,
       pendingcb: 0,
       prefinished: false,
       errorEmitted: true,
       emitClose: false,
       autoDestroy: false,
       errored: [Error],
       closed: true,
       closeEmitted: false
     },
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: Server {
       maxHeaderSize: undefined,
       insecureHTTPParser: undefined,
       _events: [Object: null prototype],
       _eventsCount: 4,
       _maxListeners: undefined,
       _connections: 0,
       _handle: [TCP],
       _usingWorkers: false,
       _workers: [],
       _unref: false,
       allowHalfOpen: true,
       pauseOnConnect: false,
       httpAllowHalfOpen: false,
       timeout: 0,
       keepAliveTimeout: 5000,
       maxHeadersCount: null,
       headersTimeout: 60000,
       requestTimeout: 0,
       _connectionKey: '6::::3000',
       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
       [Symbol(ServerResponse)]: [Function: ServerResponse],
       [Symbol(kCapture)]: false,
       [Symbol(async_id_symbol)]: 4
     },
     _server: Server {
       maxHeaderSize: undefined,
       insecureHTTPParser: undefined,
       _events: [Object: null prototype],
       _eventsCount: 4,
       _maxListeners: undefined,
       _connections: 0,
       _handle: [TCP],
       _usingWorkers: false,
       _workers: [],
       _unref: false,
       allowHalfOpen: true,
       pauseOnConnect: false,
       httpAllowHalfOpen: false,
       timeout: 0,
       keepAliveTimeout: 5000,
       maxHeadersCount: null,
       headersTimeout: 60000,
       requestTimeout: 0,
       _connectionKey: '6::::3000',
       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
       [Symbol(ServerResponse)]: [Function: ServerResponse],
       [Symbol(kCapture)]: false,
       [Symbol(async_id_symbol)]: 4
     },
     parser: HTTPParser {
       '0': [Function: bound setRequestTimeout],
       '1': [Function: parserOnHeaders],
       '2': [Function: parserOnHeadersComplete],
       '3': [Function: parserOnBody],
       '4': [Function: parserOnMessageComplete],
       '5': [Function: bound onParserExecute],
       '6': [Function: bound onParserTimeout],
       _headers: [],
       _url: '',
       socket: [Circular *1],
       incoming: [Circular *2],
       outgoing: null,
       maxHeaderPairs: 2000,
       _consumed: true,
       onIncoming: [Function: bound parserOnIncoming],
       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
     },
     on: [Function: socketListenerWrap],
     addListener: [Function: socketListenerWrap],
     prependListener: [Function: socketListenerWrap],
     _paused: false,
     _httpMessage: ServerResponse {
       _events: [Object: null prototype],
       _eventsCount: 1,
       _maxListeners: undefined,
       outputData: [],
       outputSize: 0,
       writable: true,
       destroyed: false,
       _last: false,
       chunkedEncoding: false,
       shouldKeepAlive: true,
       _defaultKeepAlive: true,
       useChunkedEncodingByDefault: true,
       sendDate: true,
       _removedConnection: false,
       _removedContLen: false,
       _removedTE: false,
       _contentLength: null,
       _hasBody: true,
       _trailer: '',
       finished: false,
       _headerSent: false,
       socket: [Circular *1],
       _header: null,
       _keepAliveTimeout: 5000,
       _onPendingData: [Function: bound updateOutgoingData],
       _sent100: false,
       _expect_continue: false,
       req: [Circular *2],
       locals: [Object: null prototype] {},
       _startAt: undefined,
       _startTime: undefined,
       writeHead: [Function: writeHead],
       __onFinished: null,
       [Symbol(kCapture)]: false,
       [Symbol(kNeedDrain)]: false,
       [Symbol(corked)]: 0,
       [Symbol(kOutHeaders)]: [Object: null prototype]
     },
     _peername: { address: '::ffff:172.21.0.4', family: 'IPv6', port: 53942 },
     [Symbol(async_id_symbol)]: 6,
     [Symbol(kHandle)]: null,
     [Symbol(kSetNoDelay)]: false,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]: null,
     [Symbol(kBuffer)]: null,
     [Symbol(kBufferCb)]: null,
     [Symbol(kBufferGen)]: null,
     [Symbol(kCapture)]: false,
     [Symbol(kBytesRead)]: 256,
     [Symbol(kBytesWritten)]: 47,
     [Symbol(RequestTimeout)]: undefined
   },
   httpVersionMajor: 1,
   httpVersionMinor: 1,
   httpVersion: '1.1',
   complete: true,
   headers: {
     accept: '*/*',
     'content-type': 'application/json',
     'user-agent': 'PostmanRuntime/7.28.4',
     'postman-token': '6d0259c6-8945-49de-bd69-af331e6e89ca',
     host: 'localhost',
     'accept-encoding': 'gzip, deflate, br',
     connection: 'keep-alive',
     'content-length': '0'
   },
   rawHeaders: [
     'Accept',
     '*/*',
     'Content-Type',
     'application/json',
     'user-agent',
     'PostmanRuntime/7.28.4',
     'postman-token',
     '6d0259c6-8945-49de-bd69-af331e6e89ca',
     'host',
     'localhost',
     'accept-encoding',
     'gzip, deflate, br',
     'connection',
     'keep-alive',
     'content-length',
     '0'
   ],
   trailers: {},
   rawTrailers: [],
   aborted: false,
   upgrade: false,
   url: '/signup',
   method: 'POST',
   statusCode: null,
   statusMessage: null,
   client: <ref *1> Socket {
     connecting: false,
     _hadError: false,
     _parent: null,
     _host: null,
     _readableState: ReadableState {
       objectMode: false,
       highWaterMark: 16384,
       buffer: BufferList { head: null, tail: null, length: 0 },
       length: 0,
       pipes: [],
       flowing: true,
       ended: false,
       endEmitted: false,
       reading: true,
       sync: false,
       needReadable: true,
       emittedReadable: false,
       readableListening: false,
       resumeScheduled: false,
       errorEmitted: true,
       emitClose: false,
       autoDestroy: false,
       destroyed: true,
       errored: [Error],
       closed: true,
       closeEmitted: true,
       defaultEncoding: 'utf8',
       awaitDrainWriters: null,
       multiAwaitDrain: false,
       readingMore: false,
       decoder: null,
       encoding: null,
       [Symbol(kPaused)]: false
     },
     _events: [Object: null prototype] {
       end: [Array],
       timeout: [Function: socketOnTimeout],
       data: [Function: bound socketOnData],
       error: [Function: noop],
       close: [Array],
       drain: [Function: bound socketOnDrain],
       resume: [Function: onSocketResume],
       pause: [Function: onSocketPause]
     },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState: WritableState {
       objectMode: false,
       highWaterMark: 16384,
       finalCalled: false,
       needDrain: false,
       ending: false,
       ended: false,
       finished: false,
       destroyed: true,
       decodeStrings: false,
       defaultEncoding: 'utf8',
       length: 0,
       writing: false,
       corked: 0,
       sync: false,
       bufferProcessing: false,
       onwrite: [Function: bound onwrite],
       writecb: null,
       writelen: 0,
       afterWriteTickInfo: null,
       buffered: [],
       bufferedIndex: 0,
       allBuffers: true,
       allNoop: true,
       pendingcb: 0,
       prefinished: false,
       errorEmitted: true,
       emitClose: false,
       autoDestroy: false,
       errored: [Error],
       closed: true,
       closeEmitted: false
     },
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: Server {
       maxHeaderSize: undefined,
       insecureHTTPParser: undefined,
       _events: [Object: null prototype],
       _eventsCount: 4,
       _maxListeners: undefined,
       _connections: 0,
       _handle: [TCP],
       _usingWorkers: false,
       _workers: [],
       _unref: false,
       allowHalfOpen: true,
       pauseOnConnect: false,
       httpAllowHalfOpen: false,
       timeout: 0,
       keepAliveTimeout: 5000,
       maxHeadersCount: null,
       headersTimeout: 60000,
       requestTimeout: 0,
       _connectionKey: '6::::3000',
       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
       [Symbol(ServerResponse)]: [Function: ServerResponse],
       [Symbol(kCapture)]: false,
       [Symbol(async_id_symbol)]: 4
     },
     _server: Server {
       maxHeaderSize: undefined,
       insecureHTTPParser: undefined,
       _events: [Object: null prototype],
       _eventsCount: 4,
       _maxListeners: undefined,
       _connections: 0,
       _handle: [TCP],
       _usingWorkers: false,
       _workers: [],
       _unref: false,
       allowHalfOpen: true,
       pauseOnConnect: false,
       httpAllowHalfOpen: false,
       timeout: 0,
       keepAliveTimeout: 5000,
       maxHeadersCount: null,
       headersTimeout: 60000,
       requestTimeout: 0,
       _connectionKey: '6::::3000',
       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
       [Symbol(ServerResponse)]: [Function: ServerResponse],
       [Symbol(kCapture)]: false,
       [Symbol(async_id_symbol)]: 4
     },
     parser: HTTPParser {
       '0': [Function: bound setRequestTimeout],
       '1': [Function: parserOnHeaders],
       '2': [Function: parserOnHeadersComplete],
       '3': [Function: parserOnBody],
       '4': [Function: parserOnMessageComplete],
       '5': [Function: bound onParserExecute],
       '6': [Function: bound onParserTimeout],
       _headers: [],
       _url: '',
       socket: [Circular *1],
       incoming: [Circular *2],
       outgoing: null,
       maxHeaderPairs: 2000,
       _consumed: true,
       onIncoming: [Function: bound parserOnIncoming],
       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
     },
     on: [Function: socketListenerWrap],
     addListener: [Function: socketListenerWrap],
     prependListener: [Function: socketListenerWrap],
     _paused: false,
     _httpMessage: ServerResponse {
       _events: [Object: null prototype],
       _eventsCount: 1,
       _maxListeners: undefined,
       outputData: [],
       outputSize: 0,
       writable: true,
       destroyed: false,
       _last: false,
       chunkedEncoding: false,
       shouldKeepAlive: true,
       _defaultKeepAlive: true,
       useChunkedEncodingByDefault: true,
       sendDate: true,
       _removedConnection: false,
       _removedContLen: false,
       _removedTE: false,
       _contentLength: null,
       _hasBody: true,
       _trailer: '',
       finished: false,
       _headerSent: false,
       socket: [Circular *1],
       _header: null,
       _keepAliveTimeout: 5000,
       _onPendingData: [Function: bound updateOutgoingData],
       _sent100: false,
       _expect_continue: false,
       req: [Circular *2],
       locals: [Object: null prototype] {},
       _startAt: undefined,
       _startTime: undefined,
       writeHead: [Function: writeHead],
       __onFinished: null,
       [Symbol(kCapture)]: false,
       [Symbol(kNeedDrain)]: false,
       [Symbol(corked)]: 0,
       [Symbol(kOutHeaders)]: [Object: null prototype]
     },
     _peername: { address: '::ffff:172.21.0.4', family: 'IPv6', port: 53942 },
     [Symbol(async_id_symbol)]: 6,
     [Symbol(kHandle)]: null,
     [Symbol(kSetNoDelay)]: false,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]: null,
     [Symbol(kBuffer)]: null,
     [Symbol(kBufferCb)]: null,
     [Symbol(kBufferGen)]: null,
     [Symbol(kCapture)]: false,
     [Symbol(kBytesRead)]: 256,
     [Symbol(kBytesWritten)]: 47,
     [Symbol(RequestTimeout)]: undefined
   },
   _consuming: false,
   _dumped: false,
   next: [Function: next],
   baseUrl: '',
   originalUrl: '/signup',
   _parsedUrl: Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/signup',
     path: '/signup',
     href: '/signup',
     _raw: '/signup'
   },
   params: {},
   query: {},
   res: <ref *3> ServerResponse {
     _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     outputData: [],
     outputSize: 0,
     writable: true,
     destroyed: false,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     _defaultKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: <ref *1> Socket {
       connecting: false,
       _hadError: false,
       _parent: null,
       _host: null,
       _readableState: [ReadableState],
       _events: [Object: null prototype],
       _eventsCount: 8,
       _maxListeners: undefined,
       _writableState: [WritableState],
       allowHalfOpen: true,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: [Server],
       _server: [Server],
       parser: [HTTPParser],
       on: [Function: socketListenerWrap],
       addListener: [Function: socketListenerWrap],
       prependListener: [Function: socketListenerWrap],
       _paused: false,
       _httpMessage: [Circular *3],
       _peername: [Object],
       [Symbol(async_id_symbol)]: 6,
       [Symbol(kHandle)]: null,
       [Symbol(kSetNoDelay)]: false,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]: null,
       [Symbol(kBuffer)]: null,
       [Symbol(kBufferCb)]: null,
       [Symbol(kBufferGen)]: null,
       [Symbol(kCapture)]: false,
       [Symbol(kBytesRead)]: 256,
       [Symbol(kBytesWritten)]: 47,
       [Symbol(RequestTimeout)]: undefined
     },
     _header: null,
     _keepAliveTimeout: 5000,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular *2],
     locals: [Object: null prototype] {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: null,
     [Symbol(kCapture)]: false,
     [Symbol(kNeedDrain)]: false,
     [Symbol(corked)]: 0,
     [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
   },
   _startAt: [ 505, 965771870 ],
   _startTime: 2021-11-18T12:15:49.800Z,
   _remoteAddress: '::ffff:172.21.0.4',
   body: {},
   _body: true,
   length: undefined,
   secret: undefined,
   cookies: [Object: null prototype] {},
   signedCookies: [Object: null prototype] {},
   route: Route {
     path: '/signup',
     stack: [ [Layer] ],
     methods: { post: true }
   },
   [Symbol(kCapture)]: false,
   [Symbol(RequestTimeout)]: undefined
 }